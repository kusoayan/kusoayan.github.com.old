<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Lazy is good]]></title>
  <link href="http://kusoayan.github.com/atom.xml" rel="self"/>
  <link href="http://kusoayan.github.com/"/>
  <updated>2012-06-01T23:26:47+08:00</updated>
  <id>http://kusoayan.github.com/</id>
  <author>
    <name><![CDATA[Lazy Wei]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[清理 Arch Linux 的 Package]]></title>
    <link href="http://kusoayan.github.com/blog/2012/06/01/archlinux-clean-orphan-package/"/>
    <updated>2012-06-01T23:20:00+08:00</updated>
    <id>http://kusoayan.github.com/blog/2012/06/01/archlinux-clean-orphan-package</id>
    <content type="html"><![CDATA[<p>Arch 的 Pacman 很好用，可以自動幫你解套件相依的問題，但是用久了就容易出現這種狀況：可能某個套件是當初安裝別的套件時為了解決相依問題而被安裝上去，但之後卻不再被需要，也就是說這個套件成了孤兒，耗在你的系統中佔空間。</p>

<p>好險 Pacman 同時也提供了一個好用的功能，可以讓你查詢哪些套件是 Orphan：
<code>$ pacman -Qdt</code></p>

<p>更棒的是，你可以遞迴的刪掉這些套件：
<code>$ pacman -Rns $(pacman -Qdtq)</code></p>

<p>定期清理這些孤兒套件是個好習慣！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[佈署 FuelPHP 到 PagodaBox: PHP 的 Heroku]]></title>
    <link href="http://kusoayan.github.com/blog/2012/05/19/fuelphp-pagodabox-php-cloud/"/>
    <updated>2012-05-19T16:55:00+08:00</updated>
    <id>http://kusoayan.github.com/blog/2012/05/19/fuelphp-pagodabox-php-cloud</id>
    <content type="html"><![CDATA[<p>有寫 Ruby 的人一定知道 <a href="http://www.heroku.com/">Heroku</a>，簡直就是 ROR 的天堂吧…雖然說 Heroku 也可以 deploy PHP，但是總是有種依附在 Rubyer 底下的感覺（？）XD</p>

<p>所以今天就來介紹一下 <a href="http://pagodabox.com/">PagodaBox</a>，以及怎麼 deploy FuelPHP on it！</p>

<!-- more -->


<p>PagodaBox 和 Heroku 一樣是屬於 PaaS(Platform as a Service) 平台，</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google API and Service Account]]></title>
    <link href="http://kusoayan.github.com/blog/2012/05/05/google-api-and-service-account/"/>
    <updated>2012-05-05T13:49:00+08:00</updated>
    <id>http://kusoayan.github.com/blog/2012/05/05/google-api-and-service-account</id>
    <content type="html"><![CDATA[<p>最近在研究怎麼在 OAuth2 的機制下去驗證 hard coded 的身份，大致上來說就是我希望能讓自己的 Web Application 通過驗證，而不是 User，這樣 user 就能透過我的 Web App 去做一些相關操作。</p>

<!-- more -->


<p>後來翻 Google API 的 Documents 時意外發現，原來 Google 有提供一個 Service Account 的服務，這個服務正好就是我想要的，首先到 <a href="https://code.google.com/apis/console">https://code.google.com/apis/console</a> 這裡去註冊你的 application，註冊時身份要選擇 Service Account。</p>

<p>一般來說，是由 web app 產生一個 url，讓 user 透過這個 url 到授權頁面，user 授權後會再度被導回 web app，並且附帶一個 access token。</p>

<p>而 Service Account 則是讓上述 user 所做的事情改成我們的 web app 去做，也就是由 web app 去要 access token 回來。</p>

<p>但這裡的問題會是，要怎麼確認去要 access token 的是我們的 web app 而不是別人？
所以 Google 需要一個加密過的 JSON Web Tokens（JWT），驗證身份的詳細流程可以參考 <a href="http://goo.gl/RyqTd">http://goo.gl/RyqTd</a></p>

<p>這邊就稍微分享一下 Service Account 的用法，整個 JWT 的產生、簽章都可以在 Google 的 <a href="http://goo.gl/qUZEL">Doc</a> 中找到，但是 Doc 上也說了，非常不建議 developer 自己實作這個流程，而是建議你使用 <a href="http://goo.gl/MZ4yg">Google APIs Client Library for PHP</a></p>

<p>透過這個 Client Library，取得 access token 的整個過程會變得非常簡單，程式碼部份如下：</p>

<figure class='code'><figcaption><span>google-api-service-account  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="k">require_once</span> <span class="s1">&#39;./src/apiClient.php&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">const</span> <span class="no">CLIENT_ID</span> <span class="o">=</span> <span class="s1">&#39;123456789.apps.googleusercontent.com&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">const</span> <span class="no">SERVICE_ACCOUNT_NAME</span> <span class="o">=</span> <span class="s1">&#39;123456789@developer.gserviceaccount.com&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">const</span> <span class="no">KEY_FILE</span> <span class="o">=</span> <span class="s1">&#39;./some/where/to/your/privatekey.p12&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$key</span> <span class="o">=</span> <span class="nb">file_get_contents</span><span class="p">(</span><span class="nx">KEY_FILE</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$a</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">apiAssertionCredentials</span><span class="p">(</span>
</span><span class='line'>  <span class="nx">SERVICE_ACCOUNT_NAME</span><span class="p">,</span>
</span><span class='line'>  <span class="k">array</span><span class="p">(</span><span class="s1">&#39;https://gdata.youtube.com&#39;</span><span class="p">),</span>
</span><span class='line'>  <span class="nv">$key</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$url</span> <span class="o">=</span> <span class="s2">&quot;https://accounts.google.com/o/oauth2/token&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$data</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>    <span class="s1">&#39;grant_type&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;assertion&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;assertion_type&#39;</span> <span class="o">=&gt;</span> <span class="s2">&quot;http://oauth.net/grant_type/jwt/1.0/bearer&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;assertion&#39;</span> <span class="o">=&gt;</span> <span class="nv">$a</span><span class="o">-&gt;</span><span class="na">generateAssertion</span><span class="p">(),</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'><span class="nb">print_r</span><span class="p">(</span><span class="nv">$data</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ch</span> <span class="o">=</span> <span class="nb">curl_init</span><span class="p">();</span>
</span><span class='line'><span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="nx">CURLOPT_URL</span><span class="p">,</span> <span class="nv">$url</span><span class="p">);</span>
</span><span class='line'><span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="nx">CURLOPT_POST</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'><span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="nx">CURLOPT_RETURNTRANSFER</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'><span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="nx">CURLOPT_POSTFIELDS</span><span class="p">,</span> <span class="nb">http_build_query</span><span class="p">(</span><span class="nv">$data</span><span class="p">));</span>
</span><span class='line'><span class="nv">$result</span> <span class="o">=</span> <span class="nb">curl_exec</span><span class="p">(</span><span class="nv">$ch</span><span class="p">);</span>
</span><span class='line'><span class="nb">curl_close</span><span class="p">(</span><span class="nv">$ch</span><span class="p">);</span>
</span><span class='line'><span class="nv">$result</span> <span class="o">=</span> <span class="nx">json_decode</span><span class="p">(</span><span class="nv">$result</span><span class="p">,</span> <span class="k">true</span><span class="p">);</span>
</span><span class='line'><span class="nb">var_dump</span><span class="p">(</span><span class="nv">$result</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>一開始的幾個 constant:</p>

<p><code>CLIENT_ID</code> 和 <code>SERVICE_ACCOUNT_NAME</code>
分別是 Google Api Console 上面顯示的 Client ID 和 Email address</p>

<p><code>KEY_FILE</code> 則是當初申請 Google API Console 時他給的 Private key 的檔案位置（你要自己把他下載回來）</p>

<p>接著就可以使用 <code>apiAssertionCredentials</code> 這個物件的 <code>generateAssertion</code> method 來產生 assertion</p>

<p>最後面的 curl 是我自己把資料 post 到 google 測試用的，最後拿到的 access token 就可以用來操作相關的 API 了！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[archlinux 的 locate]]></title>
    <link href="http://kusoayan.github.com/blog/2012/05/02/archlinux-locate/"/>
    <updated>2012-05-02T00:40:00+08:00</updated>
    <id>http://kusoayan.github.com/blog/2012/05/02/archlinux-locate</id>
    <content type="html"><![CDATA[<p>要用到 locate 這個指令時卻出現 command not found…
所以找了一下，原來是要自己安裝阿</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo yaourt -S mlocate</span></code></pre></td></tr></table></div></figure>


<p>接著他應該會出現這樣的訊息</p>

<blockquote><p>mlocate command is technically locate, but slocate is symlinked and still works.
You should run updatedb as root.
所以下指令</p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo updatedb</span></code></pre></td></tr></table></div></figure>


<p>然後就等他跑完吧！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[localtunnel - 將你的 localhost 分享給其他人]]></title>
    <link href="http://kusoayan.github.com/blog/2012/04/29/localtunnel-share-localhost-to-the-world/"/>
    <updated>2012-04-29T13:58:00+08:00</updated>
    <id>http://kusoayan.github.com/blog/2012/04/29/localtunnel-share-localhost-to-the-world</id>
    <content type="html"><![CDATA[<p>今天在研究 FuelPHP 和 FaceBook 的登入機制時，FB 要求我輸入 domain name，因為安全問題只會允許該 domain。</p>

<p>因為是在本機開發，所以一開始我填 127.0.0.1，結果他跟我說這是 invalid domain name…然後我又填了 localhost，照樣XD
這時候其實有一種解法是直接去改 /etc/hosts…但是太麻煩了！</p>

<!-- more -->


<p>所以今天來介紹一下 <a href="http://progrium.com/localtunnel/">localtunnel</a> 這個非常酷的東西！
安裝很簡單，就透過 gem 裝起來就可以了：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ gem install localtunnel</span></code></pre></td></tr></table></div></figure>


<p>然後第一次用的時候要先新增你的 public key：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ localtunnel -k ~/.ssh/id\_rsa.pub 80</span></code></pre></td></tr></table></div></figure>


<p>k 表示新增一個 key，接著是放 RSA public key 的位置，最後一個參數表示你要開放的 port。</p>

<p>接著你會看到類似這樣的文字：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>This localtunnel service is brought to you by Twilio.
</span><span class='line'>Port 80 is now publicly accessible from http://4vff.localtunnel.com ...</span></code></pre></td></tr></table></div></figure>


<p>這樣只要透過那個網址就能連到 localhost:80 了！
Easy and Cool!
而之後用的話就只要 <code>localtunnel 80</code> ！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在 archlinux 上安裝 grub2]]></title>
    <link href="http://kusoayan.github.com/blog/2012/04/28/reinstall-grub2-on-archlinux/"/>
    <updated>2012-04-28T11:10:00+08:00</updated>
    <id>http://kusoayan.github.com/blog/2012/04/28/reinstall-grub2-on-archlinux</id>
    <content type="html"><![CDATA[<p>因為每次升級 <a href="http://www.ubuntu.com/">ubuntu</a> 的時候他都會把我的 grub2 選單蓋掉…所以只好重新在 archlinux 上裝過了</p>

<!-- more -->


<p>首先，用 pacman 或 yaourt 安裝 grub2</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo pacman -S grub2-bios</span></code></pre></td></tr></table></div></figure>


<p>因為 grub2 和 grub 是衝突的，所以他會問你要不要刪除 grub，按下 Enter 移除</p>

<p>接著是配置 grub2 到 MBR 中</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo grub-install --boot-directory=/boot --no-floppy --recheck --debug /dev/sda</span></code></pre></td></tr></table></div></figure>


<p>因為我只有一顆硬碟，所以最後面是 sda，多顆硬碟的我就不清楚了@@</p>

<p>然後 archwiki 上有提示說</p>

<blockquote><p>For grub2 >= 1.99 (including bzr trunk)
sudo modprobe dm-mod</p></blockquote>

<p>所以如果出現錯誤的話可以執行一下上面指令</p>

<p>然後產生 grub 的設定</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo GRUB\_PREFIX="/boot/grub" grub-mkconfig -o /boot/grub/grub.cfg</span></code></pre></td></tr></table></div></figure>


<p>如果這一步沒掃到其他 OS 的話，可以先安裝 os-probe 來協助掃描其他作業系統</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo yaourt -S os-prober</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[解決 php_network_getaddresses: getaddrinfo failed]]></title>
    <link href="http://kusoayan.github.com/blog/2012/04/27/php-network-getaddresses-getaddrinfo-failed/"/>
    <updated>2012-04-27T23:22:00+08:00</updated>
    <id>http://kusoayan.github.com/blog/2012/04/27/php-network-getaddresses-getaddrinfo-failed</id>
    <content type="html"><![CDATA[<p>今天在用 fuelphp 寄 gmail 的時候跳出了這個該死的錯誤
<code>php_network_getaddresses: getaddrinfo failed</code></p>

<p>google 之後還是找不到好解法，無耐之下只好用 dirty and quick 的方式來解決，
先 <code>ping smtp.gmail.com</code>，然後把取得的 ip 填到 /etc/hosts 底下…</p>

<p>就先這樣吧…看能不能再找到更好的解法。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在 archlinux 上安裝 node.js]]></title>
    <link href="http://kusoayan.github.com/blog/2012/04/27/install-node-dot-js-on-archlinux/"/>
    <updated>2012-04-27T17:48:00+08:00</updated>
    <id>http://kusoayan.github.com/blog/2012/04/27/install-node-dot-js-on-archlinux</id>
    <content type="html"><![CDATA[<p>因為工作需要，要接觸點 node.js，這邊就記一下怎麼在 archlinux 上安裝 node.js。</p>

<!-- more -->


<p>其實非常簡單，因為 <a href="http://aur.archlinux.org/">AUR</a> 中就有 node.js 了，所以只要下指令：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo yaourt -S nodejs</span></code></pre></td></tr></table></div></figure>


<p>就可以了，因為我是用 yaourt 去抓 AUR 中的東西，如果你用的套件不同，可以照自己需求更改。</p>

<p>接著測試一下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ mkdir nodejs
</span><span class='line'>$ cd nodejs
</span><span class='line'>$ echo "console.log(\"Hello World\");" > helloworld.js
</span><span class='line'>$ node helloworld.js</span></code></pre></td></tr></table></div></figure>


<p>這樣應個就可以看到 Hello World 的字樣了！更多關於 node.js 的教學可以參考<a href="http://www.nodebeginner.org/index-zh-tw.html">Node入門</a>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress custom start line in codeblock]]></title>
    <link href="http://kusoayan.github.com/blog/2012/04/22/octopress-custom-start-line-in-codeblock/"/>
    <updated>2012-04-22T15:49:00+08:00</updated>
    <id>http://kusoayan.github.com/blog/2012/04/22/octopress-custom-start-line-in-codeblock</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress 幫 PHP 語句上色而不需要 php tag]]></title>
    <link href="http://kusoayan.github.com/blog/2012/04/22/octopress-highlight-phpinline/"/>
    <updated>2012-04-22T14:53:00+08:00</updated>
    <id>http://kusoayan.github.com/blog/2012/04/22/octopress-highlight-phpinline</id>
    <content type="html"><![CDATA[<p>在幫程式碼上色時可以使用 codeblock 來包住程式碼區塊，但是像要幫 PHP 上色時卻會有個麻煩，如果程式碼開頭沒有<code>&lt;?php</code>這個 tag 的話，就不會被上色了：</p>

<!-- more -->




<figure class='code'><figcaption><span>php without tag </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">echo &quot;Hello World!&quot;; </span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>php with tag  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'><span class="k">echo</span> <span class="s2">&quot;Hello World!&quot;</span><span class="p">;</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://gist.github.com/2398211">參考解法</a>：
修改 octopress 資料夾底下的 plugins/pygments_code.rb，在大約第 14 行的地方加入</p>

<figure class='code'><figcaption><span>plugins/pygments_code.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">opts</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">lang</span> <span class="o">==</span> <span class="s1">&#39;phpinline&#39;</span>
</span><span class='line'>      <span class="n">lang</span> <span class="o">=</span> <span class="s1">&#39;php&#39;</span>
</span><span class='line'>      <span class="n">opts</span> <span class="o">=</span> <span class="p">{</span><span class="ss">:startinline</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>之後使用 lang:phpinline 就可以省去 php tag 了！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[fuelphp 新增（修改）欄位]]></title>
    <link href="http://kusoayan.github.com/blog/2012/04/22/fuelphp-add-field/"/>
    <updated>2012-04-22T10:58:00+08:00</updated>
    <id>http://kusoayan.github.com/blog/2012/04/22/fuelphp-add-field</id>
    <content type="html"><![CDATA[<p>這次就來記一下 FuelPHP 的 migration。</p>

<p>用 <code>oil generate</code> 建完一大堆 Model、DB Table 之後，如果想更改、新增欄位怎麼辦？</p>

<!-- more -->


<p>這時候就可以用 FuelPHP 強大的 migration 功能！</p>

<p>首先先建立一個 migration 的檔案在 app/migrations 底下，開頭請照順序 001~999 這樣編號，不能跳號、也不能有重複的，舉個例子，</p>

<p>這是 OK 的：</p>

<ul>
<li>migrations/

<ul>
<li>001_create_users.php</li>
<li>002_create_items.php</li>
</ul>
</li>
</ul>


<p>這是不 OK 的：</p>

<ul>
<li>migrations/

<ul>
<li>001_create_users.php</li>
<li>002_create_items.php</li>
<li>002_create_books.php</li>
<li>004_create_stores.php</li>
</ul>
</li>
</ul>


<p>接著，這個 migration 檔案的內容可以參考下列格式</p>

<figure class='code'><figcaption><span>006_example.php  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="k">namespace</span> <span class="nx">Fuel\Migrations</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Example</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">up</span><span class="p">()</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="nx">\DBUtil</span><span class="o">::</span><span class="na">create_table</span><span class="p">(</span><span class="s1">&#39;users&#39;</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>          <span class="s1">&#39;id&#39;</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;constraint&#39;</span> <span class="o">=&gt;</span> <span class="mi">11</span><span class="p">,</span> <span class="s1">&#39;type&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;int&#39;</span><span class="p">,</span> <span class="s1">&#39;auto_increment&#39;</span> <span class="o">=&gt;</span> <span class="k">true</span><span class="p">),</span>
</span><span class='line'>          <span class="s1">&#39;username&#39;</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;constraint&#39;</span> <span class="o">=&gt;</span> <span class="mi">50</span><span class="p">,</span> <span class="s1">&#39;type&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;varchar&#39;</span><span class="p">),</span>
</span><span class='line'>          <span class="s1">&#39;password&#39;</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;constraint&#39;</span> <span class="o">=&gt;</span> <span class="mi">255</span><span class="p">,</span> <span class="s1">&#39;type&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;varchar&#39;</span><span class="p">),</span>
</span><span class='line'>          <span class="s1">&#39;group&#39;</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;constraint&#39;</span> <span class="o">=&gt;</span> <span class="mi">11</span><span class="p">,</span> <span class="s1">&#39;type&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;int&#39;</span><span class="p">),</span>
</span><span class='line'>          <span class="s1">&#39;email&#39;</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;constraint&#39;</span> <span class="o">=&gt;</span> <span class="mi">255</span><span class="p">,</span> <span class="s1">&#39;type&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;varchar&#39;</span><span class="p">),</span>
</span><span class='line'>          <span class="s1">&#39;last_login&#39;</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;constraint&#39;</span> <span class="o">=&gt;</span> <span class="mi">11</span><span class="p">,</span> <span class="s1">&#39;type&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;int&#39;</span><span class="p">),</span>
</span><span class='line'>          <span class="s1">&#39;login_hash&#39;</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;constraint&#39;</span> <span class="o">=&gt;</span> <span class="mi">255</span><span class="p">,</span> <span class="s1">&#39;type&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;varchar&#39;</span><span class="p">),</span>
</span><span class='line'>          <span class="s1">&#39;profile_fields&#39;</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;type&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;text&#39;</span><span class="p">),</span>
</span><span class='line'>          <span class="s1">&#39;created_at&#39;</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;constraint&#39;</span> <span class="o">=&gt;</span> <span class="mi">11</span><span class="p">,</span> <span class="s1">&#39;type&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;int&#39;</span><span class="p">),</span>
</span><span class='line'>          <span class="s1">&#39;updated_at&#39;</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;constraint&#39;</span> <span class="o">=&gt;</span> <span class="mi">11</span><span class="p">,</span> <span class="s1">&#39;type&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;int&#39;</span><span class="p">),</span>
</span><span class='line'>
</span><span class='line'>      <span class="p">),</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;id&#39;</span><span class="p">));</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">down</span><span class="p">()</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="nx">\DBUtil</span><span class="o">::</span><span class="na">drop_table</span><span class="p">(</span><span class="s1">&#39;users&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>首先注意到的是，會有兩個 method：up 還有 down，分別是讓 oil 可以知道怎麼執行或是反執行這個 migration，也就是說每個 migration 的動作都是可逆的！
再來是新增欄位的方式，可以參考 FuelPHP 的 <a href="http://docs.fuelphp.com/classes/database/dbutil.html#/method_add_fields">DBUtil</a></p>

<figure class='code'><figcaption><span>add fiel  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nx">\DBUtil</span><span class="o">::</span><span class="na">add</span><span class="nx">\_fields</span><span class="p">(</span><span class="s1">&#39;users&#39;</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>    <span class="s1">&#39;surname&#39;</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;constraint&#39;</span> <span class="o">=&gt;</span> <span class="mi">100</span><span class="p">,</span> <span class="s1">&#39;type&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;varchar&#39;</span><span class="p">),</span>
</span><span class='line'>    <span class="s1">&#39;twitter_name&#39;</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;constraint&#39;</span> <span class="o">=&gt;</span> <span class="mi">100</span><span class="p">,</span> <span class="s1">&#39;type&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;varchar&#39;</span><span class="p">),</span>
</span><span class='line'><span class="p">));</span>
</span></code></pre></td></tr></table></div></figure>


<p>別忘了在 down method 中加入反操作</p>

<figure class='code'><figcaption><span>drop fiel  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'>    <span class="nx">\DBUtil</span><span class="o">::</span><span class="na">drop</span><span class="nx">\_fields</span><span class="p">(</span><span class="s1">&#39;users&#39;</span><span class="p">,</span> <span class="s1">&#39;surname&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>當 migration 的檔案建立好之後，就可以直接使用 oil 來幫你處理剩下的事情了！</p>

<p><code>php oil refine migrate</code></p>

<p>這個指令會讓 oil 自動 migrate 到最新的版本，當然你也可以自己指定版本或是其他操作：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ php oil refine migrate:current
</span><span class='line'>$ php oil refine migrate:up
</span><span class='line'>$ php oil refine migrate:down
</span><span class='line'>$ php oil refine migrate --version=10</span></code></pre></td></tr></table></div></figure>


<p>這樣 database 的 table 就都弄好了，接下來記得修改一下你的 model，通常需要加的是 validate 的部份，加上新的欄位的驗證方式！</p>

<p>寫到這邊才發現其實 FuelPHP 的 <code>oil generate</code> 有更強大的功能…他可以幫你<a href="http://docs.fuelphp.com/packages/oil/generate.html#/migrations">產生 migrate 檔案</a> XD
所以你就可以用這種更快速的方式來產生 migrations：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ php oil generate migration create_users name:text email:string[50] password:string[125]
</span><span class='line'>$ php oil generate migration rename_table_users_to_accounts
</span><span class='line'>$ php oil generate migration add_bio_to_accounts bio:text
</span><span class='line'>$ php oil generate migration rename_field_name_to_username_in_accounts
</span><span class='line'>$ php oil generate migration drop_accounts</span></code></pre></td></tr></table></div></figure>


<p>簡直是太爽了XD</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[github fork 後與原 project 同步]]></title>
    <link href="http://kusoayan.github.com/blog/2012/04/21/github-fork-sync/"/>
    <updated>2012-04-21T10:39:00+08:00</updated>
    <id>http://kusoayan.github.com/blog/2012/04/21/github-fork-sync</id>
    <content type="html"><![CDATA[<p>在 github 上 fork 完一個 project 之後，是不會自動跟原本的 project 保持同步的，也就是說如果今天 fork 回來之後，原本的 project 又改了某些東西，那這些修改是不會出現在你的 fork 回來的 project 當中。
所以需要一些操作來讓其同步，首先 cd 進 git repo 的目錄：</p>

<!-- more -->


<p><code>cd some-project</code></p>

<p>然後將原本的 project 加入 remote 中</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git remote add the-original-repo https://github.com/aaaaa/bbbbb.git #最後這裡是原本 project 的 github 位置
</span><span class='line'>git pull the-original-repo master</span></code></pre></td></tr></table></div></figure>


<p>這樣就可以了！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用 fuelphp email 套件寄gmail]]></title>
    <link href="http://kusoayan.github.com/blog/2012/04/20/fuelphp-email-gmail/"/>
    <updated>2012-04-20T00:42:00+08:00</updated>
    <id>http://kusoayan.github.com/blog/2012/04/20/fuelphp-email-gmail</id>
    <content type="html"><![CDATA[<p>這篇紀錄如何在 FuelPHP 中透過 email 這個 package 去寄 email，以及利用 gmail 去寄信！</p>

<!-- more -->


<p>從 1.1 版開始，email 套件就有被包含在官方下載版本中，所以只需要引入就好，
可以在兩個地方引入：</p>

<figure class='code'><figcaption><span>config.php </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">// 在 app/config/config.php 的 &#39;always_load&#39; 底下</span>
</span><span class='line'><span class="x">&#39;packages&#39; =&gt; array(</span>
</span><span class='line'><span class="x">    &#39;email&#39;,</span>
</span><span class='line'><span class="x">),</span>
</span><span class='line'>
</span><span class='line'><span class="x">// 或在 controller 中:</span>
</span><span class='line'><span class="x">\Package::load(&#39;email&#39;);</span>
</span></code></pre></td></tr></table></div></figure>


<p>然後把 packages/email/config/email.php 複製到 app/config/email.php 作為預設的設定檔，其中有些參數可以調整，這裡就紀錄我有用到的部份：</p>

<ol>
<li>drive：預設是 &#8216;mail&#8217; 不過因為我要透過 gmail 去寄信所以這裡改成 &#8216;smtp&#8217;</li>
<li>smtp.host：預設為空，我改成了 gmail 的 &#8216;ssl://smtp.gmail.com&#8217;</li>
<li>smtp.port：預設是 25，同樣改成了 gmail 的 465</li>
<li>smtp.username：這裡就填上 gmail 的帳號（不用包含 @gmail.com）</li>
<li>smtp.password：這裡填 gmail 的密碼</li>
<li>newline：預設是 &#8220;\n&#8221; 不過為了讓 gmail 成功運作我改成了 &#8220;\r\n&#8221;，其實我也不知道為什麼要這樣，問了資工系強者學長後才知道可能是 Protocal 要求</li>
</ol>


<p>使用方面則超簡單</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'> <span class="c1">// Create an instance</span>
</span><span class='line'><span class="nv">$email</span> <span class="o">=</span> <span class="nx">Email</span><span class="o">::</span><span class="na">forge</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 寄件人的地址</span>
</span><span class='line'><span class="nv">$email</span><span class="o">-&gt;</span><span class="na">from</span><span class="p">(</span><span class="s1">&#39;my@email.me&#39;</span><span class="p">,</span> <span class="s1">&#39;My Name&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 收件人的地址</span>
</span><span class='line'><span class="nv">$email</span><span class="o">-&gt;</span><span class="na">to</span><span class="p">(</span><span class="s1">&#39;blablabla@xxxmail.com&#39;</span><span class="p">,</span> <span class="s1">&#39;Johny Squid&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 標題</span>
</span><span class='line'><span class="nv">$email</span><span class="o">-&gt;</span><span class="na">subject</span><span class="p">(</span><span class="s1">&#39;This is the subject&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 如果要一次寄給多人的話，可以用：</span>
</span><span class='line'><span class="nv">$email</span><span class="o">-&gt;</span><span class="na">to</span><span class="p">(</span><span class="k">array</span><span class="p">(</span>
</span><span class='line'>    <span class="s1">&#39;example@mail.com&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;another@mail.com&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;With a Name&#39;</span><span class="p">,</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 最後就是內容</span>
</span><span class='line'><span class="nv">$email</span><span class="o">-&gt;</span><span class="na">body</span><span class="p">(</span><span class="s1">&#39;This is my message&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>然後可以使用 <code>send()</code> 方法來寄送：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'><span class="k">try</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nv">$email</span><span class="o">-&gt;</span><span class="na">send</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">catch</span><span class="p">(</span><span class="nx">\EmailValidationFailedException</span> <span class="nv">$e</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// The validation failed</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">catch</span><span class="p">(</span><span class="nx">\EmailSendingFailedException</span> <span class="nv">$e</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// The driver could not send the email</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>當寄送郵件的時候，會有兩種例外狀況可以處理，分別是：</p>

<ol>
<li>\EmailValidationFailedException 當郵件地址格式沒通過驗證的時候</li>
<li>\EmailSendingFailedException 當 driver 沒有成功運行的時候</li>
</ol>


<p>基本上我就用到這些了，不過如果要再更實用點的話，其實可以設定 html_body：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">$email-&gt;html_body(\View::forge(&#39;email/template&#39;, $email_data));</span>
</span></code></pre></td></tr></table></div></figure>


<p>還可以搭配 template 來用非常方便！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rake 0.9.2.2 vs 0.9.2 error]]></title>
    <link href="http://kusoayan.github.com/blog/2012/04/17/rake-0-dot-9-2-dot-2-vs-0-dot-9-2-error/"/>
    <updated>2012-04-17T00:06:00+08:00</updated>
    <id>http://kusoayan.github.com/blog/2012/04/17/rake-0-dot-9-2-dot-2-vs-0-dot-9-2-error</id>
    <content type="html"><![CDATA[<p>使用 rake 來執行依些 octopress 的指令時出現</p>

<pre><code>You have already activated rake 0.9.2.2, but your Gemfile requires rake 0.9.2. Using bundle exec may solve this. 
</code></pre>

<p>一開始是乖乖聽他的話用 <code>bundle exec rake</code> 來取代 <code>rake</code>，不過很快我就覺得這樣實在太麻煩了，解決方法很簡單，直接在 terminal 輸入：</p>

<pre><code>bundle update rake
</code></pre>

<p>就可以了！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FuelPHP 安裝配置（一）]]></title>
    <link href="http://kusoayan.github.com/blog/2012/04/16/fuelphp-setup/"/>
    <updated>2012-04-16T20:57:00+08:00</updated>
    <id>http://kusoayan.github.com/blog/2012/04/16/fuelphp-setup</id>
    <content type="html"><![CDATA[<p>這系列記一下 FuelPHP 的安裝配置步驟，config、orm、auth、oil 等。</p>

<!-- more -->


<p>按照官方網站上的說明，可以藉由兩種方式來安裝：</p>

<ul>
<li>直接透過指令安裝：</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ curl get.fuelphp.com/oil | sh</span></code></pre></td></tr></table></div></figure>


<p>這種方式目前只在 *nix 系統（Linux、OS X、Unix、etc.）上可以使用，下了指令之後，他會自己把 oil 這個 shell-script 抓下來然後安裝到你的 /usr/bin 底下，也因此過程中他會需要你的密碼來授權。裝完之後可以看一下這個 shell-script 到底幹了什麼事情；</p>

<figure class='code'><figcaption><span>oil  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'><span class="k">if</span> <span class="o">[</span> -f <span class="s2">&quot;./oil&quot;</span> <span class="o">]</span>; <span class="k">then</span>
</span><span class='line'><span class="k">        </span>php oil <span class="s2">&quot;$@&quot;</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>
</span><span class='line'><span class="k">        if</span> <span class="o">[</span> <span class="s2">&quot;$1&quot;</span> <span class="o">==</span> <span class="s2">&quot;create&quot;</span> <span class="o">]</span>; <span class="k">then</span>
</span><span class='line'><span class="k">    </span>
</span><span class='line'><span class="k">                if</span> <span class="o">[</span> ! <span class="sb">`</span>which git<span class="sb">`</span> <span class="o">]</span>; <span class="k">then </span>
</span><span class='line'><span class="k">                    </span><span class="nb">echo</span> <span class="s2">&quot;For this installer to work you&#39;ll need to install Git.&quot;</span>
</span><span class='line'>                    <span class="nb">echo</span> <span class="s1">&#39;        http://git-scm.com/&#39;</span>
</span><span class='line'>                <span class="k">fi</span>
</span><span class='line'><span class="k">                </span>
</span><span class='line'><span class="k">                </span>git clone --recursive git://github.com/fuel/fuel.git <span class="s2">&quot;./$2&quot;</span>
</span><span class='line'>                php <span class="s2">&quot;./$2/oil&quot;</span> refine install
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'><span class="k">                </span><span class="nb">echo</span> <span class="s1">&#39;This is not a valid Fuel installation so Oil is a bit lost.&#39;</span>
</span><span class='line'>                <span class="nb">echo</span> <span class="s1">&#39;        http://fuelphp.com/docs/installation/instructions.html&#39;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">fi</span>
</span><span class='line'><span class="k">fi</span>
</span></code></pre></td></tr></table></div></figure>


<p>其實就只是當你下指令 <code>oil create</code> 時去 clone 一份 FuelPHP Framework 的檔案回來，然後如果資料夾底下有 oil 這個檔案時，會自動幫你把 <code>oil</code> alias 到 <code>php oil</code>，也就是你可以直接用 <code>oil</code> 這個指令替代 <code>php oil</code>！</p>

<ul>
<li>手動安裝

<ul>
<li>先下載 <a href="http://docs.fuelphp.com/installation/download.html">FeulPHP</a></li>
<li>把它解壓縮</li>
<li>把解壓縮後的資料夾移到你的 Server 上，結構大概如下：

<ul>
<li>/

<ul>
<li>fuel/

<ul>
<li>app/</li>
<li>core/</li>
<li>packages/</li>
</ul>
</li>
<li>public/

<ul>
<li>.htaccess</li>
<li>assets/</li>
<li>index.php</li>
</ul>
</li>
<li>oil</li>
</ul>
</li>
</ul>
</li>
<li>設定資料夾的讀寫權限，可以手動或是執行底下的指令：</li>
</ul>
</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ php oil refine install
</span><span class='line'>        Made writable: APPPATH/cache
</span><span class='line'>        Made writable: APPPATH/logs
</span><span class='line'>        Made writable: APPPATH/tmp</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FuelPHP json]]></title>
    <link href="http://kusoayan.github.com/blog/2012/04/16/fuelphp-json/"/>
    <updated>2012-04-16T20:57:00+08:00</updated>
    <id>http://kusoayan.github.com/blog/2012/04/16/fuelphp-json</id>
    <content type="html"><![CDATA[<p>在寫台大竹友會的竹塹周網站時，剛好有要用到 FuelPHP 的 json 回傳，
所以這邊就簡單的紀錄一下，
要在 FuelPHP 中使用 json 非常簡單，在 FuelPHP 的官方 docs 中有<a href="http://docs.fuelphp.com/general/controllers/rest.html">提到</a>，你可以建立一個 Controller 去 extends Controller_Rest，像是：</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Controller_Items</span> <span class="k">extends</span> <span class="nx">Controller_Rest</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="k">function</span> <span class="nf">post_list</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="nv">$items</span> <span class="o">=</span> <span class="nx">Model_Item</span><span class="o">::</span><span class="na">find</span><span class="p">(</span><span class="s1">&#39;all&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="nv">$data</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="nv">$i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="k">foreach</span> <span class="p">(</span><span class="nv">$items</span> <span class="k">as</span> <span class="nv">$item</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="nv">$data</span><span class="p">[</span><span class="nv">$i</span><span class="p">][</span><span class="s1">&#39;item_id&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$item</span><span class="o">-&gt;</span><span class="na">id</span><span class="p">;</span>
</span><span class='line'>            <span class="nv">$data</span><span class="p">[</span><span class="nv">$i</span><span class="p">][</span><span class="s1">&#39;item_name&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$item</span><span class="o">-&gt;</span><span class="na">name</span><span class="p">;</span>
</span><span class='line'>            <span class="nv">$data</span><span class="p">[</span><span class="nv">$i</span><span class="o">++</span><span class="p">][</span><span class="s1">&#39;item_price&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$item</span><span class="o">-&gt;</span><span class="na">price</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">response</span><span class="p">(</span><span class="k">array</span><span class="p">(</span>
</span><span class='line'>                    <span class="s1">&#39;items&#39;</span> <span class="o">=&gt;</span> <span class="nv">$data</span><span class="p">,</span>
</span><span class='line'>                    <span class="p">));</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>這是我在竹友會網站中應用到的例子。</p>

<p>接著就可以用 http://your.domain/items/list.json 來取得 json 物件。</p>

<p>另外值得一提的是，你會發現這時候 method 的開頭並不是 action_，而是 post_，其實這表示你限定可以傳入資料的型式，你可以用的有：</p>

<ul>
<li>GET</li>
<li>POST</li>
<li>PUT</li>
<li>DELETE</li>
</ul>


<p>後面兩種是比較少用到，而且大多數瀏覽器也都不支援的！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[fuelphp - oil generate 出錯]]></title>
    <link href="http://kusoayan.github.com/blog/2012/04/16/fuelphp-oil-generate-chu-cuo/"/>
    <updated>2012-04-16T16:49:00+08:00</updated>
    <id>http://kusoayan.github.com/blog/2012/04/16/fuelphp-oil-generate-chu-cuo</id>
    <content type="html"><![CDATA[<p>今天要用 FuelPHP 的 oil 時出現了一點小錯誤，當我下指令</p>

<pre><code>oil generate model users username:varchar[50] password:string group:int email:string last_login:int login_hash:string profile_fields:text
</code></pre>

<p>時卻出現 Error 說找不到 migrations 的資料夾，上 IRC 問了之後才知道問題是出在 php.ini 中的 <code>open_basedir</code>，因為我有設定 php.ini 中的這個變數，導致 oil 沒辦法正確 resolve 資料夾。
在 IRC 上討論了半天最後解法是直接把 <code>open_basedir</code> 直接 comment 掉。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[解決 archlinux 下 gem 不在系統路徑(PATH)的問題]]></title>
    <link href="http://kusoayan.github.com/blog/2012/04/15/fix-that-gem-not-in-the-path/"/>
    <updated>2012-04-15T22:26:00+08:00</updated>
    <id>http://kusoayan.github.com/blog/2012/04/15/fix-that-gem-not-in-the-path</id>
    <content type="html"><![CDATA[<p>這篇紀錄一下如何把 gem(或其他需要被加入 PATH 中的資料夾) 的資料夾加入 PATH 當中，</p>

<p>參考連結 <a href="http://stackoverflow.com/questions/909673/how-do-i-use-gems-with-ubuntu">How do I use gems with Ubuntu?</a></p>

<!-- more -->


<p>用 <code>gem env</code> 察看 gem 的路徑</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[kusoayan@myArch octopress]$ gem env
</span><span class='line'>RubyGems Environment:
</span><span class='line'>  - RUBYGEMS VERSION: 1.8.11
</span><span class='line'>  - RUBY VERSION: 1.9.3 (2012-02-16 patchlevel 125) [x86_64-linux]
</span><span class='line'>  - INSTALLATION DIRECTORY: /usr/lib/ruby/gems/1.9.1
</span><span class='line'>  - RUBY EXECUTABLE: /usr/bin/ruby
</span><span class='line'>  - EXECUTABLE DIRECTORY: /usr/bin
</span><span class='line'>  - RUBYGEMS PLATFORMS:
</span><span class='line'>    - ruby
</span><span class='line'>    - x86_64-linux
</span><span class='line'>  - GEM PATHS:
</span><span class='line'>     - /usr/lib/ruby/gems/1.9.1
</span><span class='line'>     - /home/kusoayan/.gem/ruby/1.9.1
</span><span class='line'>  - GEM CONFIGURATION:
</span><span class='line'>     - :update_sources =&gt; true
</span><span class='line'>     - :verbose =&gt; true
</span><span class='line'>     - :benchmark =&gt; false
</span><span class='line'>     - :backtrace =&gt; false
</span><span class='line'>     - :bulk_threshold =&gt; 1000
</span><span class='line'>     - "gem" =&gt; "--user-install"
</span><span class='line'>  - REMOTE SOURCES:
</span><span class='line'>     - http://rubygems.org/</span></code></pre></td></tr></table></div></figure>


<p>找到其中 GEM PATHS 之後，把他加入 .bashrc：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>export PATH=$PATH:/home/kusoayan/.gem/ruby/1.9.1/bin</span></code></pre></td></tr></table></div></figure>


<p>這樣就完工了！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello Octopress]]></title>
    <link href="http://kusoayan.github.com/blog/2012/04/15/hello-octopress/"/>
    <updated>2012-04-15T22:00:00+08:00</updated>
    <id>http://kusoayan.github.com/blog/2012/04/15/hello-octopress</id>
    <content type="html"><![CDATA[<p>Hello Octopress!</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'><span class="k">echo</span> <span class="s2">&quot;Hello Octopress!&quot;</span><span class="p">;</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>經過幾翻波折後，終於搞定 Octopress 了！</p>

<!-- more -->


<p>基本安裝是參考<a href="http://lyhdev.com/note:octopress">這篇</a>以及<a href="http://octopress.org/">Octopress</a>的 Docs。</p>

<p>途中遇到一個問題是我安裝 gem 後，gem 卻不在我的 PATH 當中，導致我沒辦法正確使用…解決方法可以參考<a href="http://kusoayan.github.com/blog/2012/04/15/fix-that-gem-not-in-the-path/">解決 archlinux 下 gem 不在系統路徑(PATH)的問題</a>。</p>

<p>再來還有遇到一個問題是我在使用 <code>rake generate</code> 時出現了以下錯誤</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">  File &quot;&lt;string&gt;&quot;, line 1</span>
</span><span class='line'><span class="x">    import sys; print sys.executable</span>
</span><span class='line'><span class="x">                        ^</span>
</span><span class='line'><span class="x">SyntaxError: invalid syntax</span>
</span></code></pre></td></tr></table></div></figure>


<p>明顯是 python 版本作怪，解法可以參考<a href="http://blog.gonzih.org/blog/2011/09/21/fix-octopress-pygments-error-on-arch-linux/">How to Fix Octopress Pygments Error on Arch Linu</a></p>

<p>簡單來講就是在你的 plugins 資料夾中增加一個 ruby 檔案 ruby_python_arch_linux_fix.rb：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">RubyPython</span><span class="o">.</span><span class="n">configure</span> <span class="ss">:python_exe</span> <span class="o">=&gt;</span> <span class="s1">&#39;python2.7&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>就可以了</p>

<p>再來是 <em>markdown</em> 語法，可以參考<a href="http://markdown.tw/">Markdown: Syntax 中文版</a>，我覺得寫的相當不錯！</p>

<p>最後就是，能用 vim 來寫 blog 真的滿爽的XD</p>
]]></content>
  </entry>
  
</feed>
