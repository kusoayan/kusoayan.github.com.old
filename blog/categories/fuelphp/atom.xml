<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: fuelphp | Lazy is good]]></title>
  <link href="http://kusoayan.github.com/blog/categories/fuelphp/atom.xml" rel="self"/>
  <link href="http://kusoayan.github.com/"/>
  <updated>2012-05-08T01:18:19+08:00</updated>
  <id>http://kusoayan.github.com/</id>
  <author>
    <name><![CDATA[Lazy Wei]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[fuelphp 新增（修改）欄位]]></title>
    <link href="http://kusoayan.github.com/blog/2012/04/22/fuelphp-add-field/"/>
    <updated>2012-04-22T10:58:00+08:00</updated>
    <id>http://kusoayan.github.com/blog/2012/04/22/fuelphp-add-field</id>
    <content type="html"><![CDATA[<p>這次就來記一下 FuelPHP 的 migration。</p>

<p>用 <code>oil generate</code> 建完一大堆 Model、DB Table 之後，如果想更改、新增欄位怎麼辦？</p>

<!-- more -->


<p>這時候就可以用 FuelPHP 強大的 migration 功能！</p>

<p>首先先建立一個 migration 的檔案在 app/migrations 底下，開頭請照順序 001~999 這樣編號，不能跳號、也不能有重複的，舉個例子，</p>

<p>這是 OK 的：</p>

<ul>
<li>migrations/

<ul>
<li>001_create_users.php</li>
<li>002_create_items.php</li>
</ul>
</li>
</ul>


<p>這是不 OK 的：</p>

<ul>
<li>migrations/

<ul>
<li>001_create_users.php</li>
<li>002_create_items.php</li>
<li>002_create_books.php</li>
<li>004_create_stores.php</li>
</ul>
</li>
</ul>


<p>接著，這個 migration 檔案的內容可以參考下列格式
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>006_example.php  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="k">namespace</span> <span class="nx">Fuel\Migrations</span><span class="p">;</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="k">class</span> <span class="nc">Example</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="k">public</span> <span class="k">function</span> <span class="nf">up</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nx">\DBUtil</span><span class="o">::</span><span class="na">create_table</span><span class="p">(</span><span class="s1">&#39;users&#39;</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>        <span class="s1">&#39;id&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;constraint&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="mi">11</span><span class="p">,</span> <span class="s1">&#39;type&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="s1">&#39;int&#39;</span><span class="p">,</span> <span class="s1">&#39;auto_increment&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="k">true</span><span class="p">),</span>
</span><span class='line'>        <span class="s1">&#39;username&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;constraint&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="mi">50</span><span class="p">,</span> <span class="s1">&#39;type&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="s1">&#39;varchar&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="s1">&#39;password&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;constraint&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="mi">255</span><span class="p">,</span> <span class="s1">&#39;type&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="s1">&#39;varchar&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="s1">&#39;group&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;constraint&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="mi">11</span><span class="p">,</span> <span class="s1">&#39;type&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="s1">&#39;int&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="s1">&#39;email&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;constraint&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="mi">255</span><span class="p">,</span> <span class="s1">&#39;type&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="s1">&#39;varchar&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="s1">&#39;last_login&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;constraint&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="mi">11</span><span class="p">,</span> <span class="s1">&#39;type&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="s1">&#39;int&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="s1">&#39;login_hash&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;constraint&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="mi">255</span><span class="p">,</span> <span class="s1">&#39;type&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="s1">&#39;varchar&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="s1">&#39;profile_fields&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;type&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="s1">&#39;text&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="s1">&#39;created_at&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;constraint&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="mi">11</span><span class="p">,</span> <span class="s1">&#39;type&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="s1">&#39;int&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="s1">&#39;updated_at&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;constraint&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="mi">11</span><span class="p">,</span> <span class="s1">&#39;type&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="s1">&#39;int&#39;</span><span class="p">),</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">),</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;id&#39;</span><span class="p">));</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">public</span> <span class="k">function</span> <span class="nf">down</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nx">\DBUtil</span><span class="o">::</span><span class="na">drop_table</span><span class="p">(</span><span class="s1">&#39;users&#39;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nx">code</span><span class="o">&gt;&lt;/</span><span class="nx">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>首先注意到的是，會有兩個 method：up 還有 down，分別是讓 oil 可以知道怎麼執行或是反執行這個 migration，也就是說每個 migration 的動作都是可逆的！
再來是新增欄位的方式，可以參考 FuelPHP 的 <a href="http://docs.fuelphp.com/classes/database/dbutil.html#/method_add_fields">DBUtil</a>
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>add fiel  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nx">\DBUtil</span><span class="o">::</span><span class="na">add_fields</span><span class="p">(</span><span class="s1">&#39;users&#39;</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="s1">&#39;surname&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;constraint&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="mi">100</span><span class="p">,</span> <span class="s1">&#39;type&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="s1">&#39;varchar&#39;</span><span class="p">),</span>
</span><span class='line'><span class="s1">&#39;twitter_name&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;constraint&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="mi">100</span><span class="p">,</span> <span class="s1">&#39;type&#39;</span> <span class="o">=&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="s1">&#39;varchar&#39;</span><span class="p">),</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nx">code</span><span class="o">&gt;&lt;/</span><span class="nx">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">));</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
別忘了在 down method 中加入反操作
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>drop fiel  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">\DBUtil</span><span class="o">::</span><span class="na">drop</span><span class="nx">\_fields</span><span class="p">(</span><span class="s1">&#39;users&#39;</span><span class="p">,</span> <span class="s1">&#39;surname&#39;</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nx">code</span><span class="o">&gt;&lt;/</span><span class="nx">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>當 migration 的檔案建立好之後，就可以直接使用 oil 來幫你處理剩下的事情了！</p>

<p><code>php oil refine migrate</code></p>

<p>這個指令會讓 oil 自動 migrate 到最新的版本，當然你也可以自己指定版本或是其他操作：</p>

<p><code>
$ php oil refine migrate:current
$ php oil refine migrate:up
$ php oil refine migrate:down
$ php oil refine migrate --version=10
</code></p>

<p>這樣 database 的 table 就都弄好了，接下來記得修改一下你的 model，通常需要加的是 validate 的部份，加上新的欄位的驗證方式！</p>

<p>寫到這邊才發現其實 FuelPHP 的 <code>oil generate</code> 有更強大的功能…他可以幫你<a href="http://docs.fuelphp.com/packages/oil/generate.html#/migrations">產生 migrate 檔案</a> XD
所以你就可以用這種更快速的方式來產生 migrations：</p>

<p><code>
$ php oil generate migration create_users name:text email:string[50] password:string[125]
$ php oil generate migration rename_table_users_to_accounts
$ php oil generate migration add_bio_to_accounts bio:text
$ php oil generate migration rename_field_name_to_username_in_accounts
$ php oil generate migration drop_accounts
</code></p>

<p>簡直是太爽了XD</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用 fuelphp email 套件寄gmail]]></title>
    <link href="http://kusoayan.github.com/blog/2012/04/20/fuelphp-email-gmail/"/>
    <updated>2012-04-20T00:42:00+08:00</updated>
    <id>http://kusoayan.github.com/blog/2012/04/20/fuelphp-email-gmail</id>
    <content type="html"><![CDATA[<p>這篇紀錄如何在 FuelPHP 中透過 email 這個 package 去寄 email，以及利用 gmail 去寄信！</p>

<!-- more -->


<p>從 1.1 版開始，email 套件就有被包含在官方下載版本中，所以只需要引入就好，
可以在兩個地方引入：
``` php config.php
// 在 app/config/config.php 的 'always_load' 底下
'packages' => array(</p>

<pre><code>'email',
</code></pre>

<p>),</p>

<p>// 或在 controller 中:
\Package::load('email');
```</p>

<p>然後把 packages/email/config/email.php 複製到 app/config/email.php 作為預設的設定檔，其中有些參數可以調整，這裡就紀錄我有用到的部份：</p>

<ol>
<li>drive：預設是 'mail' 不過因為我要透過 gmail 去寄信所以這裡改成 'smtp'</li>
<li>smtp.host：預設為空，我改成了 gmail 的 'ssl://smtp.gmail.com'</li>
<li>smtp.port：預設是 25，同樣改成了 gmail 的 465</li>
<li>smtp.username：這裡就填上 gmail 的帳號（不用包含 @gmail.com）</li>
<li>smtp.password：這裡填 gmail 的密碼</li>
<li>newline：預設是 "\n" 不過為了讓 gmail 成功運作我改成了 "\r\n"，其實我也不知道為什麼要這樣，問了資工系強者學長後才知道可能是 Protocal 要求</li>
</ol>


<p>使用方面則超簡單
``` php
&lt;?php
 // Create an instance
$email = Email::forge();</p>

<p>// 寄件人的地址
$email->from('my@email.me', 'My Name');</p>

<p>// 收件人的地址
$email->to('blablabla@xxxmail.com', 'Johny Squid');</p>

<p>// 標題
$email->subject('This is the subject');</p>

<p>// 如果要一次寄給多人的話，可以用：
$email->to(array(</p>

<pre><code>'example@mail.com',
'another@mail.com' =&gt; 'With a Name',
</code></pre>

<p>);</p>

<p>// 最後就是內容
$email->body('This is my message');
```</p>

<p>然後可以使用 <code>send()</code> 方法來寄送：
``` php
&lt;?php
try
{</p>

<pre><code>$email-&gt;send();
</code></pre>

<p>}
catch(\EmailValidationFailedException $e)
{</p>

<pre><code>// The validation failed
</code></pre>

<p>}
catch(\EmailSendingFailedException $e)
{</p>

<pre><code>// The driver could not send the email
</code></pre>

<p>}
```</p>

<p>當寄送郵件的時候，會有兩種例外狀況可以處理，分別是：</p>

<ol>
<li>\EmailValidationFailedException 當郵件地址格式沒通過驗證的時候</li>
<li>\EmailSendingFailedException 當 driver 沒有成功運行的時候</li>
</ol>


<p>基本上我就用到這些了，不過如果要再更實用點的話，其實可以設定 html_body：
<code>php
$email-&gt;html_body(\View::forge('email/template', $email_data));
</code>
還可以搭配 template 來用非常方便！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FuelPHP 安裝配置（一）]]></title>
    <link href="http://kusoayan.github.com/blog/2012/04/16/fuelphp-setup/"/>
    <updated>2012-04-16T20:57:00+08:00</updated>
    <id>http://kusoayan.github.com/blog/2012/04/16/fuelphp-setup</id>
    <content type="html"><![CDATA[<p>這系列記一下 FuelPHP 的安裝配置步驟，config、orm、auth、oil 等。</p>

<!-- more -->


<p>按照官方網站上的說明，可以藉由兩種方式來安裝：</p>

<ul>
<li><p>直接透過指令安裝：
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ curl get.fuelphp.com/oil | sh</span></code></pre></td></tr></table></div></figure></notextile></div>
這種方式目前只在 *nix 系統（Linux、OS X、Unix、etc.）上可以使用，下了指令之後，他會自己把 oil 這個 shell-script 抓下來然後安裝到你的 /usr/bin 底下，也因此過程中他會需要你的密碼來授權。裝完之後可以看一下這個 shell-script 到底幹了什麼事情；
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>oil  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;!/bin/bash&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="o">[</span> -f <span class="s2">&quot;./oil&quot;</span> <span class="o">]</span>; <span class="k">then</span>
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;  php oil <span class="s2">&quot;$@&quot;</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;else&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;  <span class="k">if</span> <span class="o">[</span> <span class="s2">&quot;$1&quot;</span> <span class="o">==</span> <span class="s2">&quot;create&quot;</span> <span class="o">]</span>; <span class="k">then</span>
</span><span class='line'>
</span><span class='line'><span class="k">          if</span> <span class="o">[</span> ! <span class="sb">`</span>which git<span class="sb">`</span> <span class="o">]</span>; <span class="k">then </span>
</span><span class='line'><span class="k">              </span><span class="nb">echo</span> <span class="s2">&quot;For this installer to work you&#39;ll need to install Git.&quot;</span>
</span><span class='line'>              <span class="nb">echo</span> <span class="s1">&#39;        http://git-scm.com/&#39;</span>
</span><span class='line'>          <span class="k">fi</span>
</span><span class='line'>
</span><span class='line'><span class="k">          </span>git clone --recursive git://github.com/fuel/fuel.git <span class="s2">&quot;./$2&quot;</span>
</span><span class='line'>          php <span class="s2">&quot;./$2/oil&quot;</span> refine install
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'><span class="k">          </span><span class="nb">echo</span> <span class="s1">&#39;This is not a valid Fuel installation so Oil is a bit lost.&#39;</span>
</span><span class='line'>          <span class="nb">echo</span> <span class="s1">&#39;        http://fuelphp.com/docs/installation/instructions.html&#39;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">fi</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;fi
</span></code></pre></td></tr></table></div></figure></notextile></div>
其實就只是當你下指令 <code>oil create</code> 時去 clone 一份 FuelPHP Framework 的檔案回來，然後如果資料夾底下有 oil 這個檔案時，會自動幫你把 <code>oil</code> alias 到 <code>php oil</code>，也就是你可以直接用 <code>oil</code> 這個指令替代 <code>php oil</code>！</p></li>
<li><p>手動安裝</p>

<ul>
<li>先下載 <a href="http://docs.fuelphp.com/installation/download.html">FeulPHP</a></li>
<li>把它解壓縮</li>
<li>把解壓縮後的資料夾移到你的 Server 上，結構大概如下：

<ul>
<li>/

<ul>
<li>fuel/

<ul>
<li>app/</li>
<li>core/</li>
<li>packages/</li>
</ul>
</li>
<li>public/

<ul>
<li>.htaccess</li>
<li>assets/</li>
<li>index.php</li>
</ul>
</li>
<li>oil</li>
</ul>
</li>
</ul>
</li>
<li>設定資料夾的讀寫權限，可以手動或是執行底下的指令：
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ php oil refine install
</span><span class='line'>  Made writable: APPPATH/cache
</span><span class='line'>  Made writable: APPPATH/logs
</span><span class='line'>  Made writable: APPPATH/tmp</span></code></pre></td></tr></table></div></figure></notextile></div></li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FuelPHP json]]></title>
    <link href="http://kusoayan.github.com/blog/2012/04/16/fuelphp-json/"/>
    <updated>2012-04-16T20:57:00+08:00</updated>
    <id>http://kusoayan.github.com/blog/2012/04/16/fuelphp-json</id>
    <content type="html"><![CDATA[<p>在寫台大竹友會的竹塹周網站時，剛好有要用到 FuelPHP 的 json 回傳，
所以這邊就簡單的紀錄一下，
要在 FuelPHP 中使用 json 非常簡單，在 FuelPHP 的官方 docs 中有<a href="http://docs.fuelphp.com/general/controllers/rest.html">提到</a>，你可以建立一個 Controller 去 extends Controller_Rest，像是：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">&amp;lt;?php&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;class Controller_Items extends Controller_Rest</span>
</span><span class='line'><span class="x">{&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;pre&gt;&lt;code&gt;public function post_list()</span>
</span><span class='line'><span class="x">{</span>
</span><span class='line'><span class="x">    $items = Model_Item::find(&#39;all&#39;);</span>
</span><span class='line'><span class="x">    $data = array();</span>
</span><span class='line'>
</span><span class='line'><span class="x">    $i = 0;</span>
</span><span class='line'><span class="x">    foreach ($items as $item)</span>
</span><span class='line'><span class="x">    {</span>
</span><span class='line'><span class="x">        $data[$i][&#39;item_id&#39;] = $item-&amp;gt;id;</span>
</span><span class='line'><span class="x">        $data[$i][&#39;item_name&#39;] = $item-&amp;gt;name;</span>
</span><span class='line'><span class="x">        $data[$i++][&#39;item_price&#39;] = $item-&amp;gt;price;</span>
</span><span class='line'><span class="x">    }</span>
</span><span class='line'>
</span><span class='line'><span class="x">    $this-&amp;gt;response(array(</span>
</span><span class='line'><span class="x">                &#39;items&#39; =&amp;gt; $data,</span>
</span><span class='line'><span class="x">                ));</span>
</span><span class='line'><span class="x">}</span>
</span><span class='line'><span class="x">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
這是我在竹友會網站中應用到的例子。</p>

<p>接著就可以用 http://your.domain/items/list.json 來取得 json 物件。</p>

<p>另外值得一提的是，你會發現這時候 method 的開頭並不是 action_，而是 post_，其實這表示你限定可以傳入資料的型式，你可以用的有：</p>

<ul>
<li>GET</li>
<li>POST</li>
<li>PUT</li>
<li>DELETE</li>
</ul>


<p>後面兩種是比較少用到，而且大多數瀏覽器也都不支援的！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[fuelphp - oil generate 出錯]]></title>
    <link href="http://kusoayan.github.com/blog/2012/04/16/fuelphp-oil-generate-chu-cuo/"/>
    <updated>2012-04-16T16:49:00+08:00</updated>
    <id>http://kusoayan.github.com/blog/2012/04/16/fuelphp-oil-generate-chu-cuo</id>
    <content type="html"><![CDATA[<p>今天要用 FuelPHP 的 oil 時出現了一點小錯誤，當我下指令</p>

<pre><code>oil generate model users username:varchar[50] password:string group:int email:string last_login:int login_hash:string profile_fields:text
</code></pre>

<p>時卻出現 Error 說找不到 migrations 的資料夾，上 IRC 問了之後才知道問題是出在 php.ini 中的 <code>open_basedir</code>，因為我有設定 php.ini 中的這個變數，導致 oil 沒辦法正確 resolve 資料夾。
在 IRC 上討論了半天最後解法是直接把 <code>open_basedir</code> 直接 comment 掉。</p>
]]></content>
  </entry>
  
</feed>
